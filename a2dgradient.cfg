
    // 14 arguments = 4 * rgb + m + n
    //
    //                     -- m --
    //
    //  1a --1b            | | | |     |
    //   |    \      =>    | | | \     n
    //  2a ----2b          | | \  \    |

clearconsole

a2dgrad = [



    if (!= $numargs 14) [

        echo "^f1arCABAL ^f72^f1-dimensional Gradient Script.^f9 Use this function with ^f314 ^f9input arguments:"
        echo "^f3arg1^f7,  ^f0arg2^f7,  ^f1arg3^f7  = ^f3red,  ^f0green, ^f1blue ^f7components of color 1a"
        echo "^f3arg4^f7,  ^f0arg5^f7,  ^f1arg6^f7  = ^f3red,  ^f0green, ^f1blue ^f7components of color 1b"
        echo "^f3arg7^f7,  ^f0arg8^f7,  ^f1arg9^f7  = ^f3red,  ^f0green, ^f1blue ^f7components of color 2a"
        echo "^f3arg10^f7, ^f0arg11^f7, ^f1arg12^f7 = ^f3red,  ^f0green, ^f1blue ^f7components of color 2b"
        echo "^f2arg13 = Amount of color steps in m direction; ^f6arg14 = Amount of color steps in n direction"
        echo "^f7The ^f3R^f0G^f1B ^f7values have a range of 0..1. ^f0Example: ^f7/a1dgrad 0.8 1 1 0 0 1 1 1 0 0 0 0 11 15"
    ] [

            echo (concatword "^f5Starting a 2D gradient plane of size ^f1" $arg13 "^f7*^f1" $arg14 "^f7...")
            echo "^f7editbind [agradient] and use it to place the lines"
            echo "^f7editbind [agradientundo] and use it if you make an error and want to undo and go back one step"
            echo "^f0Example: ^f7/editbind end agradient; editbind home agradientundo
            echo (concatword "^f7After that, make a line of " $arg13 " cubes and press end to use the agradient function on the side of each cube")

            r_1a = $arg1;  g_1a = $arg2;  b_1a = $arg3
            r_1b = $arg4;  g_1b = $arg5;  b_1b = $arg6

            r_2a = $arg7;  g_2a = $arg8;  b_2a = $arg9
            r_2b = $arg10; g_2b = $arg11; b_2b = $arg12

            m = $arg13
            n = $arg14

            r_dif_1a1b = (-f $r_1b $r_1a)                  //   *------*
            g_dif_1a1b = (-f $g_1b $g_1a)                  //
            b_dif_1a1b = (-f $b_1b $b_1a)                  //   *      *

            r_delta_1a1b = (divf $r_dif_1a1b (-f $m 1))    //   *-     *
            g_delta_1a1b = (divf $g_dif_1a1b (-f $m 1))    //           
            b_delta_1a1b = (divf $b_dif_1a1b (-f $m 1))    //   *      *

            r_dif_2a2b = (-f $r_2b $r_2a)                  //   *      *
            g_dif_2a2b = (-f $g_2b $g_2a)                  //           
            b_dif_2a2b = (-f $b_2b $b_2a)                  //   *------*

            r_delta_2a2b = (divf $r_dif_2a2b (-f $m 1))    //   *      *
            g_delta_2a2b = (divf $g_dif_2a2b (-f $m 1))    //           
            b_delta_2a2b = (divf $b_dif_2a2b (-f $m 1))    //   *-     *


            r_1 = $r_1a   //   X      *
            g_1 = $g_1a   //
            b_1 = $b_1a   //   *      *

            r_2 = $r_2a   //   *      *
            g_2 = $g_2a   //
            b_2 = $b_2a   //   X      *


            r = $r_1a     //   V      *
            g = $g_1a     //           
            b = $b_1a     //   *      *

            m_i = 1
            n_i = 1

            echo (concatword "^f2" $m_i " of " $m " selected")

            agradient = [
                r_dif_12 = (-f $r_2 $r_1)
                g_dif_12 = (-f $g_2 $g_1)
                b_dif_12 = (-f $b_2 $b_1)

                r_delta_12 = (divf $r_dif_12 (-f $n 1))
                g_delta_12 = (divf $g_dif_12 (-f $n 1))
                b_delta_12 = (divf $b_dif_12 (-f $n 1))


                loop i $n [
// debug            echo (concatword "^f3"@r " ^f0" @g " ^f1" @b)
                    vcolor $r $g $b
                    if (!= $n_i $n) [editface -1 1];
                    r = (+f $r $r_delta_12)
                    g = (+f $g $g_delta_12)
                    b = (+f $b $b_delta_12)
                    n_i = (+ $n_i 1)
                ]

                r_1 = (+f $r_1 $r_delta_1a1b)
                g_1 = (+f $g_1 $g_delta_1a1b)
                b_1 = (+f $b_1 $b_delta_1a1b)

                r_2 = (+f $r_2 $r_delta_2a2b)
                g_2 = (+f $g_2 $g_delta_2a2b)
                b_2 = (+f $b_2 $b_delta_2a2b)

                r = $r_1    //   * * * * *
                g = $g_1    //           
                b = $b_1    //   *       *

                m_i = (+ $m_i 1)
                n_i = 1

                

 // debug       echo "^f8------------------------------"

                if (= $m_i (+ $m 1)) [ echo "^f5** Finished **" ] [echo (concatword "^f2" $m_i " of " $m  " selected")]
            ]  // agradient

            agradientundo = [

                    undo

                    r_1 = (-f $r_1 $r_delta_1a1b)
                    g_1 = (-f $g_1 $g_delta_1a1b)
                    b_1 = (-f $b_1 $b_delta_1a1b)

                    r_2 = (-f $r_2 $r_delta_2a2b)
                    g_2 = (-f $g_2 $g_delta_2a2b)
                    b_2 = (-f $b_2 $b_delta_2a2b)

                    r = $r_1    //   * * * * *
                    g = $g_1    //           
                    b = $b_1    //   *       * 

                    m_i = (- $m_i 1)

                    echo (concatword "agradientundo"); echo (concatword "^f2" $m_i " of " $m  " selected")

            ] // adradientundo

    ] // if/else


] // a2grad


