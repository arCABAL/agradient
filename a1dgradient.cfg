

a1dgrad = [

    if (!= $numargs 7) [

        echo "^f5arCABAL ^f5^f71^f5-dimensional Gradient Script.^f9 Use this function with ^f37 ^f9input arguments:"
        echo "^f3arg1^f7, ^f0arg2^f7, ^f1arg3^f7 = ^f3red, ^f0green, ^f1blue ^f7components of the initial color"
        echo "^f3arg4^f7, ^f0arg5^f7, ^f1arg6^f7 = ^f3red, ^f0green, ^f1blue ^f7components of the ending color"
        echo "^f2arg7 = Amount of color steps. ^f7The ^f3R^f0G^f1B ^f7values have a range of 0..1."
        echo "^f0Example: ^f7/a1dgrad 0 0.5 1 1 0.5 0 10"
    ] [

            allfaceswarning = 0
            if (= $allfaces 0) [allfaceswarning = 1];
            allfaces 1

            r_start = $arg1
            g_start = $arg2
            b_start = $arg3

            r_end = $arg4
            g_end = $arg5
            b_end = $arg6

            n = $arg7


            r_dif = (-f $r_end $r_start)
            g_dif = (-f $g_end $g_start)
            b_dif = (-f $b_end $b_start)

            r_delta = (divf $r_dif (-f $n 1))
            g_delta = (divf $g_dif (-f $n 1))
            b_delta = (divf $b_dif (-f $n 1))

            rgb_increment = [
            r = (+f $r $r_delta)
            g = (+f $g $g_delta)
            b = (+f $b $b_delta)
            ]

            r = $r_start
            g = $g_start
            b = $b_start


            vcolor $r $g $b
            rgb_increment

            loop i (- $n 1) [
                editface -1 1
                vcolor $r $g $b
                rgb_increment
            ]
            if (= $allfaceswarning 1) [echo allfaces ON];
    ]

]
