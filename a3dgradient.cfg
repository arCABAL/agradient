a3dgrad = [
allfaces 1

    if (&& (!= $numargs 1) (!= $numargs 3)) [ echo "^f3arCABAL ^f73^f3-dimensional Gradient Script.^n^f7Specify the size of the ^f2gradient cube^f7 (^f3N^f7*^f0N^f7*^f1N^f7) with ^f2one input argument N^f7,^nor specify ^f5three input arguments X Y Z^f7 to make a ^f5gradient cuboid^f7 (^f3X^f7*^f0Y^f7*^f1Z^f7)"] [



// numargs = 1 or arg1 = arg2 = arg3

        if (|| (= $numargs 1) (&& (= $arg1 $arg2) (= $arg2 $arg3) ) ) [echo (concatword "^f5Starting an ^f3R^f0G^f1B^f2 gradient cube^f5 of size ^f3" $arg1 "^f7*^f0" $arg1 "^f7*^f1" $arg1 "^f5...")] [
            echo (concatword "^f5Starting an ^f3R^f0G^f1B^f2 gradient cuboid^f5 of size ^f3" $arg1 "^f7*^f0" $arg2 "^f7*^f1" $arg3 "^f5...")]

        echo "^f7editbind [agradient] and use it to place the lines"
        echo "^f7editbind [agradientundo] and use it if you make an error and want to undo and go back one step"
        echo "^f0example:^f7 /editbind end agradient; editbind home agradientundo
        echo (concatword "^f7After that, make a wall of " $arg1 "*" (? (= $numargs 1) [@arg1] [@arg3]) "  cubes and press end to use the agradient function on the side of each cube")
        ceil = [ + $arg1 (=f (+ $arg1 0) $arg1) ]

        floor = [ + $arg1 0 ]

        round = [
            if (>f $arg2 0) [
                arg1 = (+f $arg1 (*f $arg2 (? (<f $arg1 0) -0.5 0.5)))
                -f $arg1 (modf $arg1 $arg2)
            ] [ if (<f $arg1 0) [ ceil (-f $arg1 0.5) ] [ floor (+f $arg1 0.5) ] ]
        ]

            

        r_ag = 0
        g_ag = 0
        b_ag = 0

        r_ag_i = 1
        b_ag_i = 1

        if (= $numargs 1) [r_steps = $arg1; g_steps = $arg1; b_steps = $arg1] [
            r_steps = $arg1; g_steps = $arg2; b_steps = $arg3
            ]

        r_delta = (divf 1 (- $r_steps 1))
        g_delta = (divf 1 (- $g_steps 1))
        b_delta = (divf 1 (- $b_steps 1))


        echo (concatword "^f3r_ag = " $r_ag "^f7,^f1 b_ag = " $b_ag "^f7; ^f2(1, 1)")

        agradient = [

            loop i (- $g_steps 1) [
                vcolor   $r_ag (*f $i $g_delta)  $b_ag $b_delta 
// debug                echo     (concatword "^f3" $r_ag " ^f0" (*f $i $g_delta)  " ^f1" $b_ag $b_delta)
                editface -1 1
            ]
            vcolor   $r_ag 1  $b_ag
            r_ag_i = (+ $r_ag_i 1) 
// debug            echo  (concatword "^f3" $r_ag " ^f0" 1  "   ^f1" $b_ag )

            r_ag = (+f $r_ag $r_delta)


            if (<= $r_ag_i $r_steps) [echo (concatword "^f3r_ag = " $r_ag "^f7,^f1 b_ag = " $b_ag "^f7; ^f2(" $r_ag_i "," $b_ag_i ")" )] [
                
                r_ag = 0; r_ag_i = 1 ; b_ag = (+f $b_ag $b_delta); b_ag_i = (+ $b_ag_i 1)
                if (> $b_ag_i $b_steps) [ 
                    echo "^f5** Finished **"   
                ] [ echo (concatword "^f9End of row^f9, next row:^n^f3r_ag = 0^f7, ^f1b_ag = " $b_ag  "^f7; ^f2(" $r_ag_i "," $b_ag_i ")" ) ]
            ]

             
        ]

        agradientundo =  [
            undo
            if (!=f $r_ag 0) [ 
                r_ag = (-f $r_ag $r_delta); r_ag_i = (- $r_ag_i 1) ] [
                    r_ag = 1; r_ag_i = $r_steps; b_ag = (-f $b_ag $b_delta); b_ag_i = (- $b_ag_i 1) ] 
            echo (concatword "agradientundo:" ); echo (concatword "^f3r_ag = " $r_ag "^f7, ^f1b_ag =" $b_ag "^f7; ^f2(" $r_ag_i "," $b_ag_i ")" )
        ]
    ]
]




